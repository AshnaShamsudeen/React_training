package com.stackroute.controller;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import com.stackroute.domain.Blog;
import com.stackroute.service.BlogService;

/* Add annotation to declare this class as REST Controller */
@RestController
@RequestMapping("/api/v1")
public class BlogController {
  /* Provide implementation code for these methods */
 @Autowired
 BlogService service;
  /*This method should save blog and return savedBlog Object */
 @PostMapping("/blog")
  public ResponseEntity<?> saveBlog(@RequestBody Blog blog) {
   HttpStatus status=HttpStatus.CREATED;
 Blog body =service.saveBlog(blog);
 return ResponseEntity.status(status).body(body);
  }
  /*This method should fetch all blogs and return the list of all blogs */
 @GetMapping("/blogs")
  public ResponseEntity<?> getAllBlogs() {
   HttpStatus status=HttpStatus.OK;
   return ResponseEntity.status(status).body(service.getAllBlogs());
  }
  /*This method should fetch the blog taking its id and return the respective blog */
 @GetMapping("/blog/{id}")
  public ResponseEntity<Blog> getBlogById(@PathVariable int id){
   HttpStatus status=HttpStatus.FOUND;
   Blog body =service.getBlogById(id);
   return ResponseEntity.status(status).body(body);
  }
  /*This method should delete the blog taking its id and return the deleted blog */
 @DeleteMapping("/blog/{id}")
  public ResponseEntity<?> getBlogAfterDeleting(@PathVariable int id) {
   HttpStatus status=HttpStatus.OK;
   Blog body =service.deleteBlog(id);
   return ResponseEntity.status(status).body(body);
  }
  /*This method should update blog and return the updatedBlog */
 @PutMapping("/blog")
  public ResponseEntity<?> updateBlog(@RequestBody Blog blog) {
   HttpStatus status=HttpStatus.OK;
 Blog body =service.updateBlog(blog);
 return ResponseEntity.status(status).body(body);
  }
}
